name: Deploy to EC2 (build on runner, pull on EC2)

on:
  push:
    branches: [ "main" ]

concurrency:
  group: deploy-backend
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      APP_DIR: backend-spring/MoodyClues
      IMAGE_NAME: moodyclues-backend
      REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      EC2_HOST: ${{ secrets.EC2_PUBLIC_IP }}
      EC2_USER: ubuntu
      # RDS secrets (use your existing values as secrets)
      RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
      RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
      RDS_JDBC_URL: jdbc:mysql://moodyclues-db-1.c52ysku4cuy5.ap-southeast-1.rds.amazonaws.com:3306/moodyclues_db?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Singapore

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Flyway migrate from runner (no SSH)
        working-directory: ${{ env.APP_DIR }}
        run: |
          chmod +x mvnw
          ./mvnw -B -Dorg.slf4j.simpleLogger.log.org.flywaydb=debug \
            flyway:migrate \
            -Dflyway.user="${RDS_USERNAME}" \
            -Dflyway.password="${RDS_PASSWORD}" \
            -Dflyway.url="${RDS_JDBC_URL}"
      - name: Build JAR (skip tests)
        working-directory: ${{ env.APP_DIR }}
        run: |
          ./mvnw -B -DskipTests clean package
      - name: Docker login (Docker Hub)
        run: echo "$REGISTRY_TOKEN" | docker login -u "$REGISTRY_USER" --password-stdin

      - name: Build & tag image
        working-directory: ${{ env.APP_DIR }}
        env:
          SHORT_SHA: ${{ github.sha }}
        run: |
          SHORT="${SHORT_SHA:0:7}"
          IMAGE="$REGISTRY_USER/${IMAGE_NAME}"
          docker build -t "$IMAGE:$SHORT" -t "$IMAGE:latest" .
          echo "IMAGE_TAG_SHORT=$IMAGE:$SHORT" >> $GITHUB_ENV
          echo "IMAGE_TAG_LATEST=$IMAGE:latest" >> $GITHUB_ENV
      - name: Push image
        run: |
          docker push "$IMAGE_TAG_SHORT"
          docker push "$IMAGE_TAG_LATEST"
      - name: Recreate PEM key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > key.pem
          chmod 600 key.pem
      - name: Quick port 22 check
        run: |
          echo "Probing port 22..."
          nc -vz -w 10 "$EC2_HOST" 22 || (echo "Port 22 not reachable"; exit 2)
      - name: SSH and deploy (with failure trace)
        run: |
          ssh -tt \
            -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=30 -o ServerAliveCountMax=10 \
            -i key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          set -Eeuo pipefail
          PS4='+ [\D{%H:%M:%S}] ${BASH_SOURCE##*/}:${LINENO}: '
          trap 'rc=$?; echo ""; echo "‚ùå FAILED at: ${BASH_SOURCE##*/}:${LINENO} -> \`${BASH_COMMAND}\` (exit $rc)"; exit $rc' ERR
          set -x
      
          # Safer repo sync (avoids interactive merge failures)
          cd ~/MoodyClues-Journaling-App 2>/dev/null || cd ~/ModyClues-Journaling-App
          git fetch origin main --depth=1
          git reset --hard origin/main
      
          cd backend-spring/MoodyClues
          chmod +x mvnw
      
          ./mvnw -v
          echo "üîÅ Flyway..."
          ./mvnw -B -Dorg.slf4j.simpleLogger.log.org.flywaydb=debug flyway:migrate \
            -Dflyway.user=${{ secrets.RDS_USERNAME }} \
            -Dflyway.password=${{ secrets.RDS_PASSWORD }} \
            -Dflyway.url=jdbc:mysql://moodyclues-db-1.c52ysku4cuy5.ap-southeast-1.rds.amazonaws.com:3306/moodyclues_db?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Singapore
      
          echo "üß± Build JAR..."
          ./mvnw -B -DskipTests clean package
      
          echo "üõë Stop old container..."
          docker stop moodyclues-container || true
          docker rm moodyclues-container || true
      
          echo "üê≥ Build image..."
          docker build -t moodyclues-backend .
      
          echo "üöÄ Run..."
          docker run -d --name moodyclues-container -p 8080:8080 moodyclues-backend
      
          echo "‚úÖ Done."
          EOF
        env:
          REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          REGISTRY_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
