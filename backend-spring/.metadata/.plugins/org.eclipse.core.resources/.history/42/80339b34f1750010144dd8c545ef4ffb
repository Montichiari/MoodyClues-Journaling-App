package com.moodyclues.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.moodyclues.dto.CounsellorLinkRequestDto;
import com.moodyclues.dto.JournalLinkRequestDto;
import com.moodyclues.model.LinkRequest;
import com.moodyclues.service.CounsellorService;
import com.moodyclues.service.LinkRequestService;

import jakarta.servlet.http.HttpSession;

@RestController
@RequestMapping("/api/linkrequest")
public class LinkRequestController {

	@Autowired
	LinkRequestService linkService;
	
	@Autowired
	CounsellorService cService;
	
	// This is for CounsellorUsers to create requests.
    @PostMapping
    public ResponseEntity<?> createLinkRequest(@RequestBody CounsellorLinkRequestDto request, HttpSession session) {
        String counsellorId = (String) session.getAttribute("id");
        LinkRequest linkRequest = linkService.createNewRequest(counsellorId, request.getClientEmail());
        return new ResponseEntity<LinkRequest>(linkRequest, HttpStatus.OK);
    }
    
    @PostMapping("/{counsellorId}")
    public ResponseEntity<?> createLinkRequestAndroid(@RequestBody CounsellorLinkRequestDto request, @PathVariable String counsellorId) {
        LinkRequest linkRequest = linkService.createNewRequest(counsellorId, request.getClientEmail());
        return new ResponseEntity<LinkRequest>(linkRequest, HttpStatus.OK);
    }

    // This is for CounsellorUsers to see all requests.
	@GetMapping("/counsellor/all-link-requests")
	public ResponseEntity<?> allLinkRequests(HttpSession session) {
		
		String id = (String) session.getAttribute("id");
		
		List<LinkRequest> linkRequests = linkService.getAllLinkRequestsByCounsellorId(id);
		
		return new ResponseEntity<>(linkRequests, HttpStatus.OK);
		
	}
	
    // This is for JournalUsers to see all requests.
    @GetMapping("/journal/all-link-requests")
    public ResponseEntity<?> incoming(HttpSession session) {
        String journalUserId = (String) session.getAttribute("id");
        
        List<LinkRequest> linkRequests = linkService.listIncoming(journalUserId);
        
        return new ResponseEntity<>(linkRequests, HttpStatus.OK);
    }

    // This is for JournalUsers to approve or reject link request.
    @PostMapping("/{id}/decision")
    public ResponseEntity<?> decide(@PathVariable String id,
                                       @RequestBody JournalLinkRequestDto decision,
                                       HttpSession session) {
        String journalUserId = (String) session.getAttribute("id");
        linkService.requestDecision(journalUserId, id, decision.isApproved());
        return new ResponseEntity<>(HttpStatus.OK);
    }
	
	
	
}
